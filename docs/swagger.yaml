openapi: 3.0.0
info:
  title: GaeKing(개킹받네)
  description: 반려견 관리 어플리케이션
  version: 1.0.0

servers:
  - url: http://localhost:3000
    description: 개발 서버

tags:
  - name: Auth
    description: 인증 관련 API
  - name: Dog
    description: 반려견 관련 API
  - name: Schedule
    description: 일정 관련 API

paths:
  /auth/join:
    post:
      tags:
        - Auth
      summary: 회원가입
      description: 신규 사용자 등록
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: 사용자 아이디
                password:
                  type: string
                  description: 비밀번호
                user_name:
                  type: string
                  description: 사용자 닉네임
              required:
                - id
                - password
                - user_name
      responses:
        '200':
          description: 회원가입 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '409':
          description: 중복된 아이디/닉네임
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '500':
          description: 서버 에러
          
  /auth/login:
    post:
      tags:
        - Auth
      summary: 로그인
      description: 사용자 로그인 및 토큰 발급
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                password:
                  type: string
              required:
                - id
                - password
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: 인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                    
  /auth/logout:
    post:
      tags:
        - Auth
      summary: 로그아웃
      description: 리프레시 토큰 삭제
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
              required:
                - refreshToken
      responses:
        '200':
          description: 로그아웃 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                    
  /auth/refresh:
    post:
      tags:
        - Auth
      summary: 액세스 토큰 갱신
      description: 리프레시 토큰으로 새 액세스 토큰 발급
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
              required:
                - refreshToken
      responses:
        '200':
          description: 토큰 갱신 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  accessToken:
                    type: string
  /auth/info:
    get:
      tags:
        - Auth
      summary: 사용자 정보 확인
      description: 클라이언트의 토큰을 확인하고 유저정보 반환
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 사용자 정보 확인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: '사용자 정보 확인'
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        description: 사용자 ID
                      user_name:
                        type: string
                        description: 사용자 이름
        '401':
          description: 인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    enum:
                      - '인증 토큰이 필요합니다.'
                      - '존재하지 않는 사용자입니다.'
                      - '유효하지 않은 토큰입니다.'
        '500':
          description: 서버 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    description: 에러 메시지
        

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          description: 사용자 아이디
        user_name:
          type: string
          description: 사용자 닉네임
        family_id:
          type: integer
          nullable: true
          description: 가족 그룹 ID
        created_at:
          type: string
          format: date-time
          description: 계정 생성일

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT 액세스 토큰

security:
  - bearerAuth: []